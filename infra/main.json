{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "7602485989730524107"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "appNamePrefix": {
      "type": "string",
      "defaultValue": "twlocr",
      "metadata": {
        "description": "Prefix for all resource names."
      }
    },
    "uniqueSuffix": {
      "type": "string",
      "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 4)]",
      "metadata": {
        "description": "Suffix to ensure unique resource names"
      }
    },
    "uniqueAppNamePrefix": {
      "type": "string",
      "defaultValue": "[format('{0}{1}', parameters('appNamePrefix'), parameters('uniqueSuffix'))]",
      "metadata": {
        "description": "Unique Prefix for all resource names."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.SignalRService/webPubSub/hubs",
      "apiVersion": "2024-10-01-preview",
      "name": "[format('{0}/{1}', format('{0}-webpubsub', parameters('uniqueAppNamePrefix')), 'cr')]",
      "properties": {
        "eventHandlers": [
          {
            "urlTemplate": "[format('https://{0}-{1}.azurewebsites.net/runtime/webhooks/webpubsub?code=', parameters('appNamePrefix'), parameters('uniqueSuffix'))]",
            "userEventPattern": "*",
            "auth": {
              "type": "none"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.SignalRService/webPubSub', format('{0}-webpubsub', parameters('uniqueAppNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2025-04-01-preview",
      "name": "[format('{0}/{1}', format('{0}-ai', parameters('uniqueAppNamePrefix')), 'gpt-4o')]",
      "sku": {
        "name": "GlobalStandard",
        "capacity": 250
      },
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "gpt-4o",
          "version": "2024-11-20"
        },
        "versionUpgradeOption": "OnceNewDefaultVersionAvailable",
        "currentCapacity": 250,
        "raiPolicyName": "Microsoft.DefaultV2"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', format('{0}-ai', parameters('uniqueAppNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces/connections",
      "apiVersion": "2025-01-01-preview",
      "name": "[format('{0}/{1}', format('{0}-ai-project', parameters('uniqueAppNamePrefix')), format('{0}-ai-project-connection-ais', parameters('uniqueAppNamePrefix')))]",
      "properties": {
        "category": "AIServices",
        "target": "[reference(resourceId('Microsoft.CognitiveServices/accounts', format('{0}-ai', parameters('uniqueAppNamePrefix'))), '2023-05-01').endpoint]",
        "authType": "ApiKey",
        "isSharedToAll": true,
        "credentials": {
          "key": "[format('{0}', listKeys(resourceId('Microsoft.CognitiveServices/accounts', format('{0}-ai', parameters('uniqueAppNamePrefix'))), '2021-10-01').key1)]"
        },
        "metadata": {
          "ApiType": "Azure",
          "ResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', format('{0}-ai', parameters('uniqueAppNamePrefix')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', format('{0}-ai', parameters('uniqueAppNamePrefix')))]",
        "[resourceId('Microsoft.MachineLearningServices/workspaces', format('{0}-ai-project', parameters('uniqueAppNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces/connections",
      "apiVersion": "2025-01-01-preview",
      "name": "[format('{0}/{1}', format('{0}-ai-project', parameters('uniqueAppNamePrefix')), format('{0}-ai-project-connection-aoai', parameters('uniqueAppNamePrefix')))]",
      "properties": {
        "category": "AzureOpenAI",
        "target": "[format('https://{0}.openai.azure.com/', format('{0}-ai', parameters('uniqueAppNamePrefix')))]",
        "authType": "ApiKey",
        "isSharedToAll": true,
        "credentials": {
          "key": "[format('{0}', listKeys(resourceId('Microsoft.CognitiveServices/accounts', format('{0}-ai', parameters('uniqueAppNamePrefix'))), '2021-10-01').key1)]"
        },
        "metadata": {
          "ApiType": "Azure",
          "ResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', format('{0}-ai', parameters('uniqueAppNamePrefix')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', format('{0}-ai', parameters('uniqueAppNamePrefix')))]",
        "[resourceId('Microsoft.MachineLearningServices/workspaces', format('{0}-ai-project', parameters('uniqueAppNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}-kv', parameters('uniqueAppNamePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [],
        "enableRbacAuthorization": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "None",
          "ipRules": [],
          "virtualNetworkRules": []
        }
      }
    },
    {
      "type": "Microsoft.SignalRService/webPubSub",
      "apiVersion": "2024-10-01-preview",
      "name": "[format('{0}-webpubsub', parameters('uniqueAppNamePrefix'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Premium_P1",
        "tier": "Premium",
        "capacity": 1
      },
      "properties": {
        "publicNetworkAccess": "Enabled",
        "networkACLs": {
          "defaultAction": "Deny",
          "publicNetwork": {
            "allow": [
              "ServerConnection",
              "ClientConnection",
              "RESTAPI",
              "Trace"
            ]
          }
        },
        "disableAadAuth": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('uniqueAppNamePrefix')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "defaultToOAuthAuthentication": true,
        "publicNetworkAccess": "Enabled",
        "allowCrossTenantReplication": false,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "blob": {
              "enabled": true,
              "keyType": "Account"
            },
            "file": {
              "enabled": true,
              "keyType": "Account"
            },
            "queue": {
              "enabled": true,
              "keyType": "Service"
            },
            "table": {
              "enabled": true,
              "keyType": "Service"
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}', parameters('uniqueAppNamePrefix'), 'default')]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('uniqueAppNamePrefix'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', parameters('uniqueAppNamePrefix'), 'default', format('{0}-storage-blob', parameters('uniqueAppNamePrefix')))]",
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('uniqueAppNamePrefix'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}-func-plan', parameters('uniqueAppNamePrefix'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "FC1",
        "tier": "FlexConsumption",
        "size": "FC1",
        "family": "FC",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2024-04-01",
      "name": "[parameters('uniqueAppNamePrefix')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-func-plan', parameters('uniqueAppNamePrefix')))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('uniqueAppNamePrefix')), '2023-01-01').primaryEndpoints.blob]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            }
          ]
        },
        "functionAppConfig": {
          "deployment": {
            "storage": {
              "type": "blobcontainer",
              "value": "[format('https://{0}.blob.{1}/{2}-storage-blob', parameters('uniqueAppNamePrefix'), environment().suffixes.storage, parameters('uniqueAppNamePrefix'))]",
              "authentication": {
                "type": "storageaccountconnectionstring",
                "storageAccountConnectionStringName": "DEPLOYMENT_STORAGE_CONNECTION_STRING"
              }
            }
          },
          "runtime": {
            "name": "dotnet-isolated",
            "version": "9.0"
          },
          "scaleAndConcurrency": {
            "maximumInstanceCount": 40,
            "instanceMemoryMB": 4096
          }
        },
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('{0}-func-plan', parameters('uniqueAppNamePrefix')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('uniqueAppNamePrefix'))]"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-ai', parameters('uniqueAppNamePrefix'))]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "sku": {
        "name": "S0"
      },
      "kind": "AIServices",
      "properties": {
        "customSubDomainName": "[parameters('uniqueAppNamePrefix')]",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('{0}-ai-insights', parameters('uniqueAppNamePrefix'))]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Bluefield",
        "Request_Source": "rest",
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Disabled",
        "ForceCustomerStorageForProfiler": false,
        "ImmediatePurgeDataOn30Days": true
      }
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2025-01-01-preview",
      "name": "[format('{0}-ai-project', parameters('uniqueAppNamePrefix'))]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "Project",
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "properties": {
        "publicNetworkAccess": "Enabled",
        "friendlyName": "[parameters('appNamePrefix')]",
        "v1LegacyMode": false,
        "hubResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', format('{0}-ai-hub', parameters('uniqueAppNamePrefix')))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.MachineLearningServices/workspaces', format('{0}-ai-hub', parameters('uniqueAppNamePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2025-01-01-preview",
      "name": "[format('{0}-ai-hub', parameters('uniqueAppNamePrefix'))]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('uniqueAppNamePrefix')))]",
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', parameters('uniqueAppNamePrefix'))]",
        "applicationInsights": "[resourceId('Microsoft.Insights/components', format('{0}-ai-insights', parameters('uniqueAppNamePrefix')))]"
      },
      "kind": "hub",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('{0}-ai-insights', parameters('uniqueAppNamePrefix')))]",
        "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('uniqueAppNamePrefix')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('uniqueAppNamePrefix'))]"
      ]
    }
  ]
}